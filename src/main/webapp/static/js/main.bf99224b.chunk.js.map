{"version":3,"sources":["components/movieTableComponents/AdditionalTasksHeader.js","constants/filterConstants.js","constants/pageActionsConsts.js","components/movieTableComponents/TableHeader.js","components/movieTableComponents/PageFooter.js","constants/movieActionsConsts.js","constants/backendConstants.js","utils/xmlUtils.js","notifications/sendNotification.js","actions/movieActions.js","components/movieTableComponents/TableRow.js","components/movieTableComponents/MovieList.js","constants/coordinatesActionsConsts.js","actions/coordinatesActions.js","components/movieTableComponents/MovieTable.js","components/movieTableComponents/TablePage.js","components/customFormComponents/rendetedInputField.js","constants/enumConstants.js","validators/required.js","constants/locationActionsConsts.js","actions/locationsActions.js","constants/personActionsConsts.js","actions/personsActions.js","components/editForms/MovieEditForm.js","components/editPages/MovieEditPage.js","components/createForms/CreateMovieForm.js","components/createPages/CreateMoviePage.js","components/filterForms/IdFilterForm.js","components/filterPages/IdFilterPage.js","components/filterForms/NameFilterForm.js","components/filterPages/NameFilterPage.js","components/filterForms/CoordinateFilterForm.js","components/filterPages/CoordinateFilterPage.js","components/filterForms/DateFilterForm.js","components/filterPages/DateFilterPage.js","components/filterForms/OscarFilterForm.js","components/filterPages/OscarFilterPage.js","components/filterForms/DurationFilterForm.js","components/filterPages/DurationFilterPage.js","components/filterForms/GenreFilterForm.js","components/filterPages/GenreFilterPage.js","components/filterForms/RatingFilterForm.js","components/filterPages/RatingFilterPage.js","components/filterForms/ScreenWriterFilterForm.js","components/filterPages/ScreenWriterFilterPage.js","components/modal/Modal.js","components/editForms/EditCoordinatesForm.js","components/editPages/EditCoordinatesPage.js","components/createForms/CreateCoordinatesForm.js","components/createPages/CreateCoordinatesPage.js","components/editForms/LocationEditForm.js","components/editPages/LocationEditPage.js","components/createForms/CreateLocationForm.js","components/createPages/CreateLocationPage.js","components/editForms/EditPersonForm.js","components/editPages/EditPersonPage.js","components/createForms/CreatePersonForm.js","components/createPages/CreatePersonPage.js","constants/additionalActionsConsts.js","components/additionalTasks/GenreTaskPage.js","actions/additionalTasksActions.js","components/additionalTasks/DurationTaskPage.js","personTableComponents/PersonTableHeader.js","personTableComponents/PersonTableRow.js","personTableComponents/PersonList.js","personTableComponents/PersonTable.js","components/additionalTasks/ScreenwriterTaskPage.js","components/App.js","reducer/movieReducer.js","reducer/pageReducer.js","reducer/coordinatesReducer.js","reducer/locationReducer.js","reducer/personReducer.js","reducer/additionalTasksReducer.js","reducer/rootReducer.js","index.js"],"names":["AdditionalTasksHeader","history","useHistory","className","id","onClick","evt","preventDefault","push","ID","NAME","COORDINATE","DATE","OSCAR","DURATION","GENRE","RATING","WRITER","SET_PER_PAGE","SET_CUR_PAGE","SET_CUR_CRITERION","SET_ITEM_COUNT","DELETE_MOVIE","SET_SORT","REMOVE_SORT","SHOW_MODAL","SET_FILTER","REMOVE_FILTER","TableHeader","dispatch","useDispatch","sort","useSelector","state","page","sortBy","filters","currentCriterion","curCriterion","sortHandler","criterion","element","document","getElementById","includes","type","payload","style","color","setActive","value","console","log","name","PageFooter","perPage","currentPage","itemCount","useState","localPerPage","setLocalPerPage","localCurPage","setLocalCurPage","changePage","onChange","event","input","target","onFocus","onBlur","Number","isInteger","contentEditable","SET_MOVIES","SET_EDITED_MOVIE","COORD_SERVLET","BASE","options","compact","textFn","parentElement","keyNo","Object","keys","_parent","length","keyName","nValue","isNaN","bValue","toLowerCase","nativeType","e","options1","fullTagEmptyElement","convert","require","serverException","msg","exception","message","position","autoDismiss","getMovies","curPage","criteria","result","substring","parseSortByParameter","filterBy","filter","from","to","like","xfrom","xto","yfrom","yto","parseFilters","fetch","method","headers","then","response","ok","text","xml2js","count","movieDTOList","movies","movie","catch","error","errorMessage","exceptionDTO","Notifications","transferFormDataToMovieDTO","form","creationDate","undefined","duration","genre","mpaaRating","oscarsCount","coordinates","screenWriter","screenwriter","location","locations","TableRow","props","movieId","deleteHandler","deleteMovie","x","y","MovieList","listItems","numbers","Array","isArray","map","SET_COORDINATES","SET_EDITED_COORDINATES","getCoordinates","status","coordinatesDTOList","coordinate","MovieTable","movieList","useEffect","deleteItem","TablePage","renderedInputField","label","readonly","meta","touched","warning","placeholder","readOnly","rating","genres","colors","required","SET_LOCATIONS","SET_EDITED_LOCATION","getLocations","locationDTOList","SET_PERSONS","SET_EDITED_PERSON","getPerson","personDTOList","persons","person","transferFormDataToCoordinatesDTO","weight","eyeColor","reduxForm","keepDirtyOnReinitialize","handleSubmit","submitting","pristine","reset","editedMovie","coordinatesList","personList","locationsList","personsList","getSingleMovie","initialize","onSubmit","Field","component","o","selected","validate","disabled","MovieEditPage","useParams","formData","xml","js2xml","body","window","reload","updateMovie","CreateMoviePage","createMovie","numberField","onSubmitSuccess","IdFilterPage","textField","NameFilterPage","CoordinateFilterPage","dateField","onKeyDown","validDate","moment","isValid","ev","keycode","keyCode","which","ipLength","DateFilterPage","DateFilterForm","OscarFilterPage","DurationFilterPage","values","errors","compare","GenreFilterPage","validateRadioGroupIsNotEmpty","RatingFilterPage","ScreenWriterFilterPage","Modal","active","children","stopPropagation","editedCoordinates","getSingleCoordinates","EditCoordinatesPage","updateCoordinates","CreateCoordinatesPage","createCoordinates","editedLocation","getSingleLocation","goBack","updateLocation","CreateLocationPage","createLocation","editedPerson","locationList","getSinglePerson","EditPersonPage","updatePerson","CreatePersonPage","createPerson","SET_GENRE_COUNT","SET_GENRE","SET_LENGTH","SET_LENGTH_COUNT","SET_SCREENWRITER","SET_SCREENWRITER_LIST","GenreTaskPage","localGenre","setLocalGenre","genreCount","additional","listen","action","countDTO","DurationTaskPage","durationCount","lengthCount","localDuration","setLocalDuration","url","PersonTableHeader","PersonTableRow","personId","PersonList","screenwriterList","PersonTable","ScreenwriterTaskPage","createBrowserHistory","App","notifications","modalActive","path","LocationEditPage","exact","initialState","rootReducer","combineReducers","item","formReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","ReactDOM","render"],"mappings":"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","file":"static/js/main.bf99224b.chunk.js","sourcesContent":["import '../../css/filter-header.css';\r\nimport '../../css/app.css';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction AdditionalTasksHeader() {\r\n    const history = useHistory();\r\n\r\n    function handleDurationClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/soa-lab1/additional/duration\");\r\n    }\r\n\r\n    function handleGenreClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/soa-lab1/additional/genre\");\r\n    }\r\n\r\n    function handleScreenwriterClick(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/soa-lab1/additional/screenwriter\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"filter-header base\">\r\n            <div className={\"tasks-div\"}>\r\n                <button id=\"new-movie-but\" onClick={handleGenreClick}>\r\n                    GENRE TASK\r\n                </button>\r\n                <button id=\"new-movie-but\" onClick={handleDurationClick}>\r\n                    DURATION TASK\r\n                </button>\r\n                <button id=\"new-movie-but\" onClick={handleScreenwriterClick}>\r\n                    SCREENWRITER TASK\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdditionalTasksHeader;\r\n","const ID = \"id\";\r\nconst NAME = \"name\";\r\nconst COORDINATE = \"coordinate\";\r\nconst DATE = \"date\";\r\nconst OSCAR = \"oscar\";\r\nconst DURATION = \"duration\";\r\nconst GENRE = \"genre\";\r\nconst RATING = \"rating\";\r\nconst WRITER = \"screenWriter\";\r\nconst EDIT_COORD = \"editCoord\"\r\nexport {ID, NAME, COORDINATE, DATE, OSCAR, DURATION, GENRE, RATING, WRITER, EDIT_COORD};","export const SET_PER_PAGE = 'SET_PER_PAGE';\r\nexport const SET_CUR_PAGE = 'SET_CUR_PAGE';\r\nexport const SET_CUR_CRITERION = 'SET_CUR_CRITERION';\r\nexport const SET_ITEM_COUNT = 'SET_ITEM_COUNT';\r\nexport const DELETE_MOVIE = 'DELETE_MOVIE';\r\nexport const SET_SORT = 'SET_SORT';\r\nexport const REMOVE_SORT = 'REMOVE_SORT';\r\nexport const SHOW_MODAL = 'SHOW_MODAL';\r\nexport const SET_FILTER = 'SET_FILTER';\r\nexport const REMOVE_FILTER = 'REMOVE_FILTER';\r\n","import '../../css/table-header.css';\r\nimport '../../css/app.css';\r\nimport {FaFilter, FaSortAmountDown} from 'react-icons/fa';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {COORDINATE, DATE, DURATION, GENRE, ID, NAME, OSCAR, RATING, WRITER} from '../../constants/filterConstants';\r\nimport {REMOVE_FILTER, REMOVE_SORT, SET_CUR_CRITERION, SET_SORT, SHOW_MODAL} from \"../../constants/pageActionsConsts\";\r\n\r\n\r\nfunction TableHeader() {\r\n    const dispatch = useDispatch();\r\n    const sort = useSelector(state => state.page.sortBy);\r\n    const filters = useSelector(state => state.page.filters);\r\n    const currentCriterion = useSelector(state => state.page.curCriterion);\r\n\r\n    function sortHandler(criterion) {\r\n        let element = document.getElementById(\"sort-\" + criterion);\r\n        if (!sort.includes(criterion)) {\r\n            dispatch({\r\n                type: SET_SORT,\r\n                payload: criterion\r\n            });\r\n            element.style.color = \"rgb(255,255,255)\";\r\n        } else {\r\n            dispatch({\r\n                type: REMOVE_SORT,\r\n                payload: criterion\r\n            });\r\n            element.style.color = \"rgba(255,255,255,0.5)\";\r\n        }\r\n    }\r\n\r\n    function setActive(value, criterion) {\r\n        console.log(\"CUR = \" + currentCriterion);\r\n        let element = document.getElementById(\"filter-\" + criterion);\r\n        for (const filter of filters) {\r\n            if (filter.name === criterion) {\r\n                dispatch({\r\n                    type: REMOVE_FILTER,\r\n                    payload: criterion\r\n                });\r\n                element.style.color = \"rgba(255,255,255,0.5)\";\r\n                return;\r\n            }\r\n        }\r\n        if (value) {\r\n            dispatch({\r\n                type: SET_CUR_CRITERION,\r\n                payload: criterion\r\n            });\r\n        }\r\n        dispatch({\r\n            type: SHOW_MODAL,\r\n            payload: value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"table-header base\" id=\"table-header\">\r\n\r\n            <div className=\"id-div\">\r\n                <span>Id</span>\r\n                <FaSortAmountDown color=\"rgba(255,255,255,0.5)\" className=\"pointer\" id=\"sort-id\"\r\n                                  onClick={() => sortHandler(ID)}/>\r\n                <FaFilter color=\"rgba(255,255,255,0.5)\" className=\"pointer\" id=\"filter-id\"\r\n                          onClick={() => setActive(true, ID)}/>\r\n            </div>\r\n            <div>\r\n                <span>Name</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-name\"\r\n                                  onClick={() => sortHandler(NAME)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-name\"\r\n                          onClick={() => setActive(true, NAME)}/>\r\n            </div>\r\n            <div>\r\n                <span>Coordinates</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-coordinate\"\r\n                                  onClick={() => sortHandler(COORDINATE)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-coordinate\"\r\n                          onClick={() => setActive(true, COORDINATE)}/>\r\n            </div>\r\n            <div>\r\n                <span>Creation Date</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-date\"\r\n                                  onClick={() => sortHandler(DATE)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-date\"\r\n                          onClick={() => setActive(true, DATE)}/>\r\n            </div>\r\n            <div>\r\n                <span>Oscars</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-oscar\"\r\n                                  onClick={() => sortHandler(OSCAR)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-oscar\"\r\n                          onClick={() => setActive(true, OSCAR)}/>\r\n            </div>\r\n            <div>\r\n                <span>Duration</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-duration\"\r\n                                  onClick={() => sortHandler(DURATION)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-duration\"\r\n                          onClick={() => setActive(true, DURATION)}/>\r\n            </div>\r\n            <div>\r\n                <span>Genre</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-genre\"\r\n                                  onClick={() => sortHandler(GENRE)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-genre\"\r\n                          onClick={() => setActive(true, GENRE)}/>\r\n            </div>\r\n            <div>\r\n                <span>Rating</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-rating\"\r\n                                  onClick={() => sortHandler(RATING)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-rating\"\r\n                          onClick={() => setActive(true, RATING)}/>\r\n            </div>\r\n            <div>\r\n                <span>Screen Writer</span>\r\n                <FaSortAmountDown className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"sort-screenWriter\"\r\n                                  onClick={() => sortHandler(WRITER)}/>\r\n                <FaFilter className=\"pointer\" color=\"rgba(255,255,255,0.5)\" id=\"filter-screenWriter\"\r\n                          onClick={() => setActive(true, WRITER)}/>\r\n            </div>\r\n            <div>\r\n                <span>Action</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableHeader;\r\n","import '../../css/page-footer.css';\r\nimport '../../css/app.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {SET_CUR_PAGE, SET_PER_PAGE} from \"../../constants/pageActionsConsts\";\r\nimport {BsPlusCircleFill, IoMdArrowRoundBack, IoMdArrowRoundForward} from \"react-icons/all\";\r\nimport {NAME} from \"../../constants/filterConstants\";\r\n\r\nfunction PageFooter() {\r\n    const perPage = useSelector(state => state.page.perPage);\r\n    const currentPage = useSelector(state => state.page.currentPage);\r\n    const itemCount = useSelector(state => state.page.itemCount);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const [localPerPage, setLocalPerPage] = useState(\"10\");\r\n    const [localCurPage, setLocalCurPage] = useState(\"1\");\r\n\r\n    function handleOnChangePerPage(event) {\r\n        let input = event.target.value;\r\n        setLocalPerPage(input);\r\n    }\r\n\r\n    function handleOnFocusPerPage(event) {\r\n        setLocalPerPage(\"\");\r\n    }\r\n\r\n    function handleOnBlurPerPage(event) {\r\n        let input = event.target.value;\r\n        if (input !== \"\" && Number.isInteger(Number(input)) && Number(input) > 0)\r\n            dispatch({\r\n                type: SET_PER_PAGE,\r\n                payload: input\r\n            });\r\n        else {\r\n            setLocalPerPage(\"10\")\r\n            dispatch({\r\n                type: SET_PER_PAGE,\r\n                payload: 10\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleOnChangeCurPage(event) {\r\n        let input = event.target.value;\r\n        setLocalCurPage(input);\r\n    }\r\n\r\n    function handleOnFocusCurPage(event) {\r\n        setLocalCurPage(\"\");\r\n    }\r\n\r\n    function handleOnBlurCurPage(event) {\r\n        let input = event.target.value;\r\n        dispatch({\r\n            type: SET_CUR_PAGE,\r\n            payload: input\r\n        });\r\n        if (input !== \"\" && Number.isInteger(Number(input)) && Number(input) > 0)\r\n            dispatch({\r\n                type: SET_CUR_PAGE,\r\n                payload: input\r\n            });\r\n        else {\r\n            setLocalCurPage(\"1\")\r\n            dispatch({\r\n                type: SET_CUR_PAGE,\r\n                payload: 1\r\n            });\r\n        }\r\n    }\r\n\r\n    function createHandler() {\r\n        history.push(\"/soa-lab1/new\");\r\n    }\r\n\r\n    function changePage(value) {\r\n        if (value > 0 && ((value - 1) * perPage - itemCount) < 0) {\r\n            setLocalCurPage(value);\r\n            dispatch({\r\n                type: SET_CUR_PAGE,\r\n                payload: value\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"footer base\">\r\n            <button id=\"new-movie-but\" onClick={() => createHandler()}>\r\n                <div className={\"icon-but\"}>\r\n                    <div className={\"icon\"}>\r\n                        <BsPlusCircleFill color={\"#4683de\"}/>\r\n                    </div>\r\n                    ADD MOVIE\r\n                </div>\r\n            </button>\r\n            <div className=\"page-footer\">\r\n                <span>Per Page</span>\r\n                <input id=\"current-num\" value={localPerPage} onChange={handleOnChangePerPage}\r\n                       onFocus={handleOnFocusPerPage} onBlur={handleOnBlurPerPage}/>\r\n                <span>Total</span>\r\n                <input id=\"current-page\" value={itemCount} contentEditable={\"false\"}/>\r\n                <div id={\"left-arrow\"}>\r\n                    <IoMdArrowRoundBack className=\"pointer\" color=\"rgb(70,131,222)\"\r\n                                        onClick={() => changePage(currentPage - 1)}/>\r\n                </div>\r\n                <input id=\"current-page\" value={localCurPage} onChange={handleOnChangeCurPage}\r\n                       onFocus={handleOnFocusCurPage} onBlur={handleOnBlurCurPage}/>\r\n                <div id={\"right-arrow\"}>\r\n                    <IoMdArrowRoundForward className=\"pointer\" color=\"rgb(70,131,222)\"\r\n                                           onClick={() => changePage(currentPage + 1)}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default PageFooter;\r\n","export const SET_MOVIES = 'SET_MOVIES';\r\nexport const SET_EDITED_MOVIE = 'SET_EDITED_MOVIE';\r\nexport const SET_SCREENWRITER_EDITED_MOVIE = 'SET_SCREENWRITER_EDITED_MOVIE';\r\n","export const MOVIE_SERVLET = \"movies\"\r\nexport const LOCATION_SERVLET = \"locations\"\r\nexport const COORD_SERVLET = \"coordinates\"\r\nexport const PERSON_SERVLET = \"persons\"\r\nexport const ADDITIONAL_SERVLET = \"additional\"\r\n//export const BASE = \"http://localhost:8080/soa_lab1_war_exploded/\"\r\n//export const HEADER = 'Content-Type': 'application/xml; charset=utf-8'\r\nexport const BASE = \"/soa-lab1/\";","export function nativeType(value) {\r\n    var nValue = Number(value);\r\n    if (!isNaN(nValue)) {\r\n        return nValue;\r\n    }\r\n    var bValue = value.toLowerCase();\r\n    if (bValue === 'true') {\r\n        return true;\r\n    } else if (bValue === 'false') {\r\n        return false;\r\n    }\r\n    return value;\r\n}\r\n\r\nexport var removeJsonTextAttribute = function (value, parentElement) {\r\n    try {\r\n        var keyNo = Object.keys(parentElement._parent).length;\r\n        var keyName = Object.keys(parentElement._parent)[keyNo - 1];\r\n        parentElement._parent[keyName] = nativeType(value);\r\n    } catch (e) {\r\n    }\r\n}\r\n\r\nexport let options = {\r\n    compact: true,\r\n    /*trim: true,\r\n    ignoreDeclaration: true,\r\n    ignoreInstruction: true,\r\n    ignoreAttributes: true,\r\n    ignoreComment: true,\r\n    ignoreCdata: true,\r\n    ignoreDoctype: true,*/\r\n    textFn: removeJsonTextAttribute\r\n};\r\n\r\nexport let options1 = {\r\n    compact: true,\r\n    fullTagEmptyElement: true\r\n};\r\n\r\nexport const convert = require('xml-js');","export const serverException = (msg) => {\r\n    let exception = {};\r\n    exception.title = \"Произошла ошибка\";\r\n    exception.message = msg;\r\n    exception.position = \"tr\";\r\n    exception.autoDismiss = 3;\r\n    return exception;\r\n}\r\n","import {history} from '../components/App.js';\r\nimport {DELETE_MOVIE, SET_ITEM_COUNT} from \"../constants/pageActionsConsts\";\r\nimport {SET_EDITED_MOVIE, SET_MOVIES} from \"../constants/movieActionsConsts\";\r\nimport {COORDINATE, DATE, DURATION, GENRE, ID, NAME, OSCAR, RATING, WRITER} from \"../constants/filterConstants\";\r\nimport {BASE, MOVIE_SERVLET} from \"../constants/backendConstants\";\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\nimport Notifications from 'react-notification-system-redux';\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\n\r\nfunction parseSortByParameter(criteria) {\r\n    if (criteria.length === 0) {\r\n        return \"\";\r\n    }\r\n    let result = \"&sortBy=\";\r\n    for (const criterion of criteria) {\r\n        result = result + criterion + \";\";\r\n    }\r\n    return result.substring(0, result.length - 1);\r\n}\r\n\r\nfunction parseFilters(filters) {\r\n    if (filters.length === 0) {\r\n        return \"\";\r\n    }\r\n    let result = \"&filterBy=\";\r\n    for (const filter of filters) {\r\n        switch (filter.name) {\r\n            case ID:\r\n                result = result + ID + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case NAME:\r\n                result = result + NAME + \",\" + filter.like + \";\"\r\n                break;\r\n            case OSCAR:\r\n                result = result + OSCAR + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case DURATION:\r\n                result = result + DURATION + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case RATING:\r\n                result = result + RATING + \",\" + filter.like + \";\"\r\n                break;\r\n            case GENRE:\r\n                result = result + GENRE + \",\" + filter.like + \";\"\r\n                break;\r\n            case DATE:\r\n                result = result + DATE + \",\" + filter.from + \",\" + filter.to + \";\"\r\n                break;\r\n            case WRITER:\r\n                result = result + WRITER + \",\" + filter.like + \";\"\r\n                break;\r\n            case COORDINATE:\r\n                result = result + COORDINATE + \",\" + filter.xfrom + \",\" + filter.xto + \",\" + filter.yfrom + \",\" + filter.yto + \";\"\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return result.substring(0, result.length - 1);\r\n}\r\n\r\nexport function getMovies(page) {\r\n    let perPage = page.perPage;\r\n    let curPage = page.currentPage;\r\n    let sortBy = parseSortByParameter(page.sortBy);\r\n    let filterBy = parseFilters(page.filters)\r\n    return (dispatch) => {\r\n        const url = BASE + MOVIE_SERVLET +\r\n            \"?perPage=\" + perPage + \"\" +\r\n            \"&curPage=\" + curPage +\r\n            sortBy +\r\n            filterBy;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw response;\r\n                } else return response.text();\r\n            })\r\n            .then(response => {\r\n                const convert = require('xml-js');\r\n                const result = convert.xml2js(response, options);\r\n                const count = result.movieDTOList.count;\r\n                const movies = result.movieDTOList.movies.movie;\r\n                dispatch({\r\n                    type: SET_MOVIES,\r\n                    payload: movies\r\n                });\r\n                dispatch({\r\n                    type: SET_ITEM_COUNT,\r\n                    payload: count\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text()\r\n                    .then(errorMessage => {\r\n                        const convert = require('xml-js');\r\n                        const result = convert.xml2js(errorMessage, options);\r\n                        const msg = result.exceptionDTO.message;\r\n                        dispatch(Notifications.error(serverException(msg)));\r\n                    })\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport function deleteMovie(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + MOVIE_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                else {\r\n                    dispatch({type: DELETE_MOVIE});\r\n                }\r\n            })\r\n            .catch(error => {\r\n                error.text()\r\n                    .then(errorMessage => {\r\n                        const convert = require('xml-js');\r\n                        const result = convert.xml2js(errorMessage, options);\r\n                        const msg = result.exceptionDTO.message;\r\n                        dispatch(Notifications.error(serverException(msg)));\r\n                    })\r\n            });\r\n    }\r\n}\r\n\r\nexport function updateMovie(movie) {\r\n    let xml = convert.js2xml(transferFormDataToMovieDTO(movie), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + MOVIE_SERVLET;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<movieDTOList><movies><movie>\" + xml + \"</movie></movies></movieDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/soa-lab1\");\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text()\r\n                    .then(errorMessage => {\r\n                        const convert = require('xml-js');\r\n                        const result = convert.xml2js(errorMessage, options);\r\n                        const msg = result.exceptionDTO.message;\r\n                        dispatch(Notifications.error(serverException(msg)));\r\n                    })\r\n            });\r\n    }\r\n}\r\n\r\nfunction transferFormDataToMovieDTO(form) {\r\n    let result = {};\r\n    result.id = form.id;\r\n    result.name = form.name;\r\n    result.creationDate = form.creationDate;\r\n    if (form.duration !== undefined)\r\n        result.duration = form.duration;\r\n    result.genre = form.genre;\r\n    result.mpaaRating = form.mpaaRating;\r\n    result.oscarsCount = form.oscarsCount;\r\n    result.coordinates = {};\r\n    result.coordinates.id = form.coordinates;\r\n    result.screenWriter = {};\r\n    result.screenWriter.id = form.screenwriter;\r\n    result.screenWriter.location = {};\r\n    result.screenWriter.location.id = form.locations;\r\n    return result;\r\n}\r\n\r\nexport function createMovie(movie) {\r\n    let xml = convert.js2xml(transferFormDataToMovieDTO(movie), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + MOVIE_SERVLET;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<movieDTOList><movies><movie>\" + xml + \"</movie></movies></movieDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw response;\r\n                } else {\r\n                    history.push(\"/soa-lab1\");\r\n                    window.location.reload(false);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getSingleMovie(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + MOVIE_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                 console.log(\"STATUS \" + response.status)\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response)\r\n                const result = convert.xml2js(response, options);\r\n                const movie = result.movieDTOList.movies.movie;\r\n                dispatch({\r\n                    type: SET_EDITED_MOVIE,\r\n                    payload: movie\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\n\r\n","import '../../css/table-row.css';\r\nimport '../../css/app.css';\r\nimport {FaEdit} from 'react-icons/fa';\r\nimport {FaTrashAlt} from 'react-icons/fa';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deleteMovie} from \"../../actions/movieActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction TableRow(props) {\r\n    const movie = props.movie;\r\n    const movieId = movie.id;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    function deleteHandler(id) {\r\n        dispatch(deleteMovie(id));\r\n    }\r\n\r\n    function editHandler(id) {\r\n        history.push(\"/soa-lab1/edit/\" + id);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"table-row base\">\r\n            <div className=\"id-div\">{movieId}</div>\r\n            <div>{movie.name}</div>\r\n            <div>({movie.coordinates.x} ; {movie.coordinates.y})</div>\r\n            <div>{movie.creationDate}</div>\r\n            <div>{movie.oscarsCount}</div>\r\n            <div>{movie.duration}</div>\r\n            <div>{movie.genre.toLowerCase()}</div>\r\n            <div>{movie.mpaaRating}</div>\r\n            <div>{movie.screenWriter === undefined ? \"null\" : movie.screenWriter.name}</div>\r\n            <div className=\"action-div\">\r\n                <div onClick={() => editHandler(movieId)}>\r\n                    <FaEdit color=\"#3DC937FF\" className=\"pointer icon\"/>\r\n                </div>\r\n                <div onClick={() => deleteHandler(movieId)}>\r\n                    <FaTrashAlt className=\"pointer icon\" color=\"#EB6767FF\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableRow;\r\n","import TableRow from \"./TableRow\";\r\n\r\nfunction MovieList(props) {\r\n    const numbers = props.movies;\r\n    let listItems;\r\n    if (numbers === undefined) {\r\n        return (\r\n            <div className=\"table-row base id-div\">\r\n                <div className=\"id-div\">No data.</div>\r\n            </div>\r\n        );\r\n    }\r\n    if (!Array.isArray(numbers)) {\r\n        //const movie = numbers[0];\r\n        listItems = <TableRow movie={numbers} key={numbers.id}/>\r\n    } else {\r\n        listItems = numbers.map((movie) =>\r\n            <TableRow movie={movie} key={movie.id}/>\r\n        );\r\n    }\r\nreturn (\r\n        <\r\n    div > {listItems}\r\n</div>\r\n);\r\n}\r\n\r\nexport default MovieList;","export const SET_COORDINATES = \"SET_COORDINATES\";\r\nexport const SET_EDITED_COORDINATES = \"SET_EDITED_COORDINATES\";","import {SET_COORDINATES, SET_EDITED_COORDINATES} from \"../constants/coordinatesActionsConsts\";\r\nimport {history} from \"../components/App\";\r\nimport {BASE, COORD_SERVLET} from \"../constants/backendConstants\";\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\n\r\nexport function getSingleCoordinates(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + COORD_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                const movie = result.coordinatesDTOList.coordinates.coordinate;\r\n                dispatch({\r\n                    type: SET_EDITED_COORDINATES,\r\n                    payload: movie\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getCoordinates() {\r\n    return (dispatch) => {\r\n        const url = BASE + COORD_SERVLET;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(response.status)\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(\"RESPONSE = \" + response);\r\n                const convert = require('xml-js');\r\n                const result = convert.xml2js(response, options);\r\n                const coordinates = result.coordinatesDTOList.coordinates.coordinate;\r\n                dispatch({\r\n                    type: SET_COORDINATES,\r\n                    payload: coordinates\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nfunction transferFormDataToCoordinatesDTO(form) {\r\n    let result = {};\r\n    result.id = form.id;\r\n    result.x = form.x;\r\n    result.y = form.y;\r\n    return result;\r\n}\r\n\r\nexport function updateCoordinates(movie, id) {\r\n    let xml = convert.js2xml(transferFormDataToCoordinatesDTO(movie), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + COORD_SERVLET;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<coordinatesDTOList><coordinates><coordinate>\" + xml + \"</coordinate></coordinates></coordinatesDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/soa-lab1/edit/\" + id);\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function createCoordinates(coordinates, id) {\r\n    let xml = convert.js2xml(coordinates, options1);\r\n    return (dispatch) => {\r\n        const url = BASE + COORD_SERVLET;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<coordinatesDTOList><coordinates><coordinate>\" + xml + \"</coordinate></coordinates></coordinatesDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/soa-lab1/edit/\" + id);\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}","import '../../css/movie-table.css';\r\nimport AdditionalTasksHeader from \"./AdditionalTasksHeader\";\r\nimport TableHeader from \"./TableHeader\";\r\nimport PageFooter from \"./PageFooter\";\r\nimport {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getMovies} from \"../../actions/movieActions\";\r\nimport MovieList from \"./MovieList\";\r\nimport {getCoordinates} from \"../../actions/coordinatesActions\";\r\n\r\nfunction MovieTable() {\r\n    const dispatch = useDispatch();\r\n    const page = useSelector(state => state.page);\r\n    const movies = useSelector(state => state.movies.movieList);\r\n\r\n\r\n    useEffect(() => {\r\n        //dispatch(getMovies(page.perPage, page.currentPage));\r\n        dispatch(getMovies(page));\r\n        dispatch(getCoordinates());\r\n    }, [page.currentPage, page.perPage, page.deleteItem, page.sortBy, page.filters]);\r\n\r\n\r\n    return (\r\n        <div className=\"movie-table\">\r\n            <AdditionalTasksHeader/>\r\n            <TableHeader/>\r\n            <MovieList movies={movies}/>\r\n            <PageFooter/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieTable;","import '../../css/table-layout.css';\r\nimport MovieTable from \"./MovieTable\";\r\nfunction TablePage() {\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h1>Movie Table</h1>\r\n            <MovieTable/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TablePage;\r\n","import React from \"react\";\r\n\r\nexport const renderedInputField = ({input, label, readonly, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"input-box\">\r\n        <div className=\"label\">{label}</div>\r\n        <input {...input} placeholder={label} type={type} readOnly={readonly}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n        {touched && ((error && <span className=\"error\">{error}</span>) || (warning &&\r\n            <span className=\"error\">{warning}</span>))}\r\n    </div>\r\n)","export const rating = [\"G\", \"PG\", \"PG_13\", \"R\", \"NC_17\"];\r\nexport const genres = [\"\",\"DRAMA\", \"TRAGEDY\", \"HORROR\", \"FANTASY\"];\r\nexport const colors = [\"GREEN\", \"RED\", \"YELLOW\", \"ORANGE\"];\r\nexport const add_genres = [\"DRAMA\", \"TRAGEDY\", \"HORROR\", \"FANTASY\"];","export const required = value => value ? undefined : 'Required';","export const SET_LOCATIONS = \"SET_LOCATIONS\"\r\nexport const SET_EDITED_LOCATION = \"SET_EDITED_LOCATION\"","import {history} from \"../components/App\";\r\nimport {BASE, LOCATION_SERVLET} from \"../constants/backendConstants\";\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\nimport {SET_EDITED_LOCATION, SET_LOCATIONS} from \"../constants/locationActionsConsts\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\n\r\n\r\nexport function getSingleLocation(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + LOCATION_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                const movie = result.locationDTOList.locations.location;\r\n                dispatch({\r\n                    type: SET_EDITED_LOCATION,\r\n                    payload: movie\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getLocations() {\r\n    return (dispatch) => {\r\n        const url = BASE + LOCATION_SERVLET;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(\"RESPONSE = \" + response);\r\n                const convert = require('xml-js');\r\n                const result = convert.xml2js(response, options);\r\n                const locations = result.locationDTOList.locations.location;\r\n                dispatch({\r\n                    type: SET_LOCATIONS,\r\n                    payload: locations\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\n\r\nfunction transferFormDataToCoordinatesDTO(form) {\r\n    let result = {};\r\n    result.id = form.id;\r\n    result.x = form.x;\r\n    result.y = form.y;\r\n    result.name = form.name;\r\n    return result;\r\n}\r\n\r\nexport function updateLocation(movie, id) {\r\n    console.log(movie);\r\n    let xml = convert.js2xml(transferFormDataToCoordinatesDTO(movie), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + LOCATION_SERVLET;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<locationDTOList><locations><location>\" + xml + \"</location></locations></locationDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw response;\r\n                } else return response.text();\r\n            })\r\n            .then(response => {\r\n                history.goBack();\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function createLocation(coordinates, id) {\r\n    let xml = convert.js2xml(coordinates, options1);\r\n    return (dispatch) => {\r\n        const url = BASE + LOCATION_SERVLET;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<locationDTOList><locations><location>\" + xml + \"</location></locations></locationDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok) {\r\n                    throw response;\r\n                } else return response.text();\r\n            })\r\n            .then(response => {\r\n                history.push(\"/soa-lab1/edit/\" + id);\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\n","export const SET_PERSONS = \"SET_PERSONS\";\r\nexport const SET_EDITED_PERSON = \"SET_EDITED_PERSON\";","import {history} from \"../components/App\";\r\nimport {BASE, PERSON_SERVLET} from \"../constants/backendConstants\";\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\nimport {SET_EDITED_PERSON, SET_PERSONS} from \"../constants/personActionsConsts\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\n\r\nexport function getSinglePerson(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + PERSON_SERVLET + \"/\" + id;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(\"STATUS \" + response.status);\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                const movie = result.personDTOList.persons.person;\r\n                dispatch({\r\n                    type: SET_EDITED_PERSON,\r\n                    payload: movie\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getPerson() {\r\n    return (dispatch) => {\r\n        const url = BASE + PERSON_SERVLET;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(\"RESPONSE = \" + response);\r\n                const convert = require('xml-js');\r\n                const result = convert.xml2js(response, options);\r\n                const coordinates = result.personDTOList.persons.person;\r\n                dispatch({\r\n                    type: SET_PERSONS,\r\n                    payload: coordinates\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nfunction transferFormDataToCoordinatesDTO(form) {\r\n    let result = {};\r\n    result.id = form.id;\r\n    result.name = form.name;\r\n    result.weight = form.weight;\r\n    result.eyeColor = form.eyeColor;\r\n    result.location = {};\r\n    result.location.id = form.locations;\r\n    return result;\r\n}\r\n\r\nexport function updatePerson(movie, id) {\r\n    let xml = convert.js2xml(transferFormDataToCoordinatesDTO(movie), options1);\r\n    console.log(\"XML = \" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + PERSON_SERVLET;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<personDTOList><persons><person>\" + xml + \"</person></persons></personDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/soa-lab1/edit/\" + id);\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function createPerson(coordinates, id) {\r\n    let xml = convert.js2xml(transferFormDataToCoordinatesDTO(coordinates), options1);\r\n    console.log(\"XML\" + xml);\r\n    return (dispatch) => {\r\n        const url = BASE + PERSON_SERVLET;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n            body: \"<personDTOList><persons><person>\" + xml + \"</person></persons></personDTOList>\"\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                history.push(\"/soa-lab1/edit/\" + id);\r\n                window.location.reload(false);\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSingleMovie} from \"../../actions/movieActions\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {genres, rating} from \"../../constants/enumConstants\";\r\nimport {required} from \"../../validators/required\";\r\nimport {getCoordinates} from \"../../actions/coordinatesActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getLocations} from \"../../actions/locationsActions\";\r\nimport {getPerson} from \"../../actions/personsActions\";\r\nimport {SET_EDITED_MOVIE, SET_SCREENWRITER_EDITED_MOVIE} from \"../../constants/movieActionsConsts\";\r\n\r\nconst MovieEditForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const movieId = useSelector(state => state.movies.editedMovie.id);\r\n    const name = useSelector(state => state.movies.editedMovie.name);\r\n    const oscarsCount = useSelector(state => state.movies.editedMovie.oscarsCount);\r\n    const duration = useSelector(state => state.movies.editedMovie.duration);\r\n    const creationDate = useSelector(state => state.movies.editedMovie.creationDate);\r\n    const genre = useSelector(state => state.movies.editedMovie.genre);\r\n    const mpaaRating = useSelector(state => state.movies.editedMovie.mpaaRating);\r\n    const coordinates = useSelector(state => state.movies.editedMovie.coordinates);\r\n    //const coordinatesId = useSelector(state => state.movies.editedMovie.coordinates.id);\r\n    const screenwriter = useSelector(state => state.movies.editedMovie.screenWriter);\r\n   // const location = useSelector(state => state.movies.editedMovie.screenWriter.location);\r\n    const coordinatesList = useSelector(state => state.coordinates.coordinatesList);\r\n    const locationList = useSelector(state => state.location.locationsList);\r\n    const personList = useSelector(state => state.person.personsList);\r\n    const history = useHistory();\r\n    //const selectedCoordinates = useSelector(state => state.form.edit-movie-form.values.coordinates)\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleMovie(id));\r\n        dispatch(getCoordinates());\r\n        //dispatch(getLocations());\r\n        dispatch(getPerson());\r\n    }, []);\r\n\r\n    function handleEditCoordSubmit(evt) {\r\n        evt.preventDefault();\r\n        let element = document.getElementById(\"coordinates\");\r\n        history.push(\"/soa-lab1/coordinates/edit/\" + element.value);\r\n    }\r\n\r\n    function    handleCreateCoordSubmit(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/soa-lab1/coordinates/new\");\r\n    }\r\n\r\n    function handleEditPersonSubmit(evt) {\r\n        evt.preventDefault();\r\n        let element = document.getElementById(\"screenwriter\");\r\n        history.push(\"/soa-lab1/person/edit/\" + element.value);\r\n    }\r\n\r\n    function handleCreatePersonSubmit(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/soa-lab1/person/new\");\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            name: name,\r\n            id: movieId,\r\n            oscarsCount: oscarsCount,\r\n            duration: duration,\r\n            creationDate: creationDate,\r\n            genre: genre,\r\n            mpaaRating: mpaaRating,\r\n            coordinates: coordinates.id,\r\n            screenwriter: screenwriter.id,\r\n        });\r\n    }, [id, name, oscarsCount, duration, genre, mpaaRating, coordinates, screenwriter])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Movie</h3>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name\"\r\n                      /* validate={[required]}*/\r\n                />\r\n                <Field name=\"oscarsCount\" type=\"number\"\r\n                       component={renderedInputField} label=\"Oscars\"\r\n                     /*  validate={[required]}*/\r\n                />\r\n                <Field name=\"duration\" type=\"number\"\r\n                       component={renderedInputField} label=\"Duration (minutes)\"\r\n                       /*validate={[required]}*/\r\n                />\r\n                <Field name=\"creationDate\" type=\"text\"\r\n                       component={renderedInputField} label=\"Creation date\"\r\n                       readonly=\"readonly\"\r\n                      /* validate={[required]}*/\r\n                />\r\n                <div className=\"label\">Genre</div>\r\n                <Field name=\"genre\"\r\n                       component=\"select\" label=\"Genre\">\r\n                    {genres.map(o => <option key={o} value={o} selected={genre === o}>{o} </option>)}\r\n                </Field>\r\n                <div className=\"label\">Rating</div>\r\n                <Field name=\"mpaaRating\"\r\n                       component=\"select\" label=\"Rating\" validate={[required]}>\r\n                    {rating.map(o => <option key={o} value={o} selected={genre === o}>{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"movie-form\"}>\r\n                <h3>Coordinates</h3>\r\n                <div className=\"label\">(X , Y)</div>\r\n                <Field name=\"coordinates\" id=\"coordinates\"\r\n                       component=\"select\" label=\"Coordinates\">\r\n                    {coordinatesList.map(o => <option key={o.id} value={o.id}>({o.x} , {o.y}) </option>)}\r\n                </Field>\r\n                <div className={\"buttons-div\"}>\r\n                    <div>\r\n                        <button id={\"edit-form-but\"} onClick={handleEditCoordSubmit}>Edit</button>\r\n                    </div>\r\n                    <div>\r\n                        <button id={\"edit-form-but\"} onClick={handleCreateCoordSubmit}>Create</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={\"movie-form\"}>\r\n                <h3>Screenwriter</h3>\r\n                <div className=\"label\">Screenwriter's name</div>\r\n                <Field name=\"screenwriter\" id=\"screenwriter\"\r\n                       component=\"select\">\r\n                    {personList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\r\n                </Field>\r\n                <div className={\"buttons-div\"}>\r\n                    <div>\r\n                        <button id={\"edit-form-but\"} onClick={handleEditPersonSubmit}>Edit</button>\r\n                    </div>\r\n                    <div>\r\n                        <button id={\"edit-form-but\"} onClick={handleCreatePersonSubmit}>Create</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'edit-movie-form',\r\n    keepDirtyOnReinitialize: true\r\n})(MovieEditForm)","import '../../css/table-layout.css';\r\nimport MovieEditForm from \"../editForms/MovieEditForm\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {updateMovie} from \"../../actions/movieActions\";\r\n\r\n\r\nfunction MovieEditPage() {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(updateMovie(formData));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Edit Movie (ID: {id})</h2>\r\n            <hr/>\r\n            <MovieEditForm id={id} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieEditPage;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSingleMovie} from \"../../actions/movieActions\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {colors, genres, rating} from \"../../constants/enumConstants\";\r\nimport {required} from \"../../validators/required\";\r\nimport {getCoordinates} from \"../../actions/coordinatesActions\";\r\nimport {getPerson} from \"../../actions/personsActions\";\r\n\r\nconst CreateMovieForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const genre = useSelector(state => state.movies.editedMovie.genre);\r\n    const coordinatesList = useSelector(state => state.coordinates.coordinatesList);\r\n    const personList = useSelector(state => state.person.personsList);\r\n\r\n    useEffect(() => {\r\n        dispatch(getCoordinates());\r\n        dispatch(getPerson());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            genre: genres[0],\r\n            mpaaRating: rating[0],\r\n            coordinates: coordinatesList[0].id,\r\n            screenwriter: personList[0].id\r\n        });\r\n    }, [coordinatesList, personList])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Movie</h3>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name\"\r\n                      /* validate={[required]}*/\r\n                />\r\n                <Field name=\"oscarsCount\" type=\"number\"\r\n                       component={renderedInputField} label=\"Oscars\"\r\n                      /* validate={[required]}*/\r\n                />\r\n                <Field name=\"duration\" type=\"number\"\r\n                       component={renderedInputField} label=\"Duration (minutes)\"\r\n                       /*validate={[required]}*/\r\n                />\r\n                <div className=\"label\">Genre</div>\r\n                <Field name=\"genre\"\r\n                       component=\"select\" label=\"Genre\">\r\n                    {genres.map(o => <option key={o} value={o} selected={genre === o}>{o} </option>)}\r\n                </Field>\r\n                <div className=\"label\">Rating</div>\r\n                <Field name=\"mpaaRating\"\r\n                       component=\"select\" label=\"Rating\">\r\n                    {rating.map(o => <option key={o} value={o} selected={genre === o}>{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"movie-form\"}>\r\n                <h3>Coordinates</h3>\r\n                <div className=\"label\">(X , Y)</div>\r\n                <Field name=\"coordinates\" id=\"coordinates\"\r\n                       component=\"select\" label=\"Coordinates\">\r\n                    {coordinatesList.map(o => <option key={o.id} value={o.id}>({o.x} , {o.y}) </option>)}\r\n                </Field>\r\n            </div>\r\n\r\n            <div className={\"movie-form\"}>\r\n                <h3>Screenwriter</h3>\r\n                <div className=\"label\">Screenwriter's name</div>\r\n                <Field name=\"screenwriter\" id=\"screenwriter\"\r\n                       component=\"select\">\r\n                    {personList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\r\n                </Field>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'create-movie-form',\r\n})(CreateMovieForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {createMovie} from \"../../actions/movieActions\";\r\nimport CreateMovieForm from \"../createForms/CreateMovieForm\";\r\n\r\n\r\nfunction CreateMoviePage() {\r\n    /*const history = useHistory();*/\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(createMovie(formData));\r\n       /* history.push('/');*/\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h1>Create Movie</h1>\r\n            <CreateMovieForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateMoviePage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('id-filter-form'));\r\n\r\n\r\nconst IdFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with id in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'id-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(IdFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport IdFilterForm from \"../filterForms/IdFilterForm\";\r\n\r\n\r\nfunction IdFilterPage() {\r\n    const dispatch = useDispatch();\r\n    const filters = useSelector(state => state.page.filters);\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-id\");\r\n        for (const filter of filters){\r\n            if (filter.name === \"id\"){\r\n                dispatch({\r\n                    type: 'REMOVE_FILTER',\r\n                    payload: \"id\"\r\n                });\r\n            }\r\n        }\r\n        let filter = {};\r\n        filter.name = \"id\";\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <IdFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IdFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst textField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"text-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('name-filter-form'));\r\n\r\n\r\nconst NameFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with title like</h3>\r\n            <div className=\"text-box-container\">\r\n                <Field name=\"like\" type=\"text\"\r\n                       component={textField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'name-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(NameFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport NameFilterForm from \"../filterForms/NameFilterForm\";\r\nimport {SET_FILTER, SHOW_MODAL} from \"../../constants/pageActionsConsts\";\r\n\r\n\r\nfunction NameFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-name\");\r\n        let filter = {};\r\n        filter.name = \"name\";\r\n        filter.like = formData.like;\r\n        dispatch({\r\n            type: SET_FILTER,\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: SHOW_MODAL,\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <NameFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NameFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('coordinate-filter-form'));\r\n\r\n\r\nconst CoordinateFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with x in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"xfrom\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> —</div>\r\n                <Field name=\"xto\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <h3>Select movies with y in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"yfrom\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> — </div>\r\n                <Field name=\"yto\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'coordinate-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(CoordinateFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport CoordinateFilterForm from \"../filterForms/CoordinateFilterForm\";\r\nimport {COORDINATE} from \"../../constants/filterConstants\";\r\n\r\n\r\nfunction CoordinateFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-coordinate\");\r\n        let filter = {};\r\n        filter.name = COORDINATE;\r\n        filter.xfrom = formData.xfrom;\r\n        filter.xto = formData.xto;\r\n        filter.yfrom = formData.yfrom;\r\n        filter.yto = formData.yto;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <CoordinateFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CoordinateFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\nimport moment from 'moment';\r\n\r\nconst dateField = ({input, label, type, onKeyDown, meta: {touched, error, warning}}) => (\r\n    <div className=\"date-box\">\r\n        <input {...input} placeholder={label} type={type} onKeyDown={onKeyDown}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n        {touched && ((error && <span className=\"error\">{error}</span>) || (warning &&\r\n            <span className=\"error\">{warning}</span>))}\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst validDate = value => {\r\n    if (moment(value, 'DD/MM/YYYY',true).isValid())\r\n        return undefined;\r\n    else\r\n        return \"Date is incorrect\";\r\n}\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('id-filter-form'));\r\n\r\nconst onKeyDown = (ev) => {\r\n    var keycode;\r\n    if (window.event)\r\n        keycode = window.event.keyCode;\r\n    else if (ev)\r\n        keycode = ev.which;\r\n    let ipLength = ev.target.value.length;\r\n    if (keycode !== 8){\r\n        if(ipLength ===2 || ipLength ===5) {\r\n            ev.target.value += '/';\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst IdFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with date in range</h3>\r\n            <div className=\"date-range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={dateField} label=\"DD/MM/YYYY\"\r\n                       onKeyDown = {onKeyDown}\r\n                       validate={[required, validDate]}\r\n                />\r\n                <div id=\"date-dash\"> — </div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={dateField} label=\"DD/MM/YYYY\"\r\n                       onKeyDown = {onKeyDown}\r\n                       validate={[required, validDate]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default reduxForm({\r\n    form: 'id-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(IdFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {DATE} from \"../../constants/filterConstants\";\r\nimport DateFilterForm from \"../filterForms/DateFilterForm\";\r\n\r\n\r\nfunction DateFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-date\");\r\n        let filter = {};\r\n        filter.name = DATE;\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <DateFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DateFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('oscar-filter-form'));\r\n\r\n\r\nconst OscarFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with oscars in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> — </div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'oscar-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(OscarFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport OscarFilterForm from \"../filterForms/OscarFilterForm\";\r\nimport {OSCAR} from \"../../constants/filterConstants\";\r\n\r\n\r\nfunction OscarFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-oscar\");\r\n        let filter = {};\r\n        filter.name = OSCAR;\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <OscarFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OscarFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst numberField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"number-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('duration-filter-form'));\r\n\r\n\r\nconst DurationFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with duration (min) in range</h3>\r\n            <div className=\"range-container\">\r\n                <Field name=\"from\" type=\"text\"\r\n                       component={numberField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n                <div> — </div>\r\n                <Field name=\"to\" type=\"text\"\r\n                       component={numberField} label=\"to\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'duration-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(DurationFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport NameFilterForm from \"../filterForms/NameFilterForm\";\r\nimport {DURATION} from \"../../constants/filterConstants\";\r\nimport DurationFilterForm from \"../filterForms/DurationFilterForm\";\r\n\r\n\r\nfunction DurationFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-duration\");\r\n        let filter = {};\r\n        filter.name = DURATION;\r\n        filter.from = formData.from;\r\n        filter.to = formData.to;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <DurationFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DurationFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('genre-filter-form'));\r\n\r\nconst validateRadioGroupIsNotEmpty = values => {\r\n    let errors = {};\r\n    if (!values.compare){\r\n        errors.compare = 'Required';\r\n    }\r\n    return errors;\r\n};\r\n\r\nconst GenreFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with genre</h3>\r\n                <div className=\"radio-group\" >\r\n                    <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"DRAMA\" />Drama</label>\r\n                    <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"TRAGEDY\" />Tragedy</label>\r\n                    <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"HORROR\"/>Horror</label>\r\n                    <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"FANTASY\"/>Fantasy</label>\r\n                </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'genre-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n    validate: validateRadioGroupIsNotEmpty\r\n})(GenreFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {GENRE} from \"../../constants/filterConstants\";\r\nimport GenreFilterForm from \"../filterForms/GenreFilterForm\";\r\n\r\n\r\nfunction GenreFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-genre\");\r\n        let filter = {};\r\n        filter.name = GENRE;\r\n        filter.like = formData.compare;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <GenreFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GenreFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('rating-filter-form'));\r\n\r\nconst validateRadioGroupIsNotEmpty = values => {\r\n    let errors = {};\r\n    if (!values.compare){\r\n        errors.compare = 'Required';\r\n    }\r\n    return errors;\r\n};\r\n\r\nconst RatingFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with rating</h3>\r\n            <div className=\"radio-group\" >\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"G\" />G</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"PG\" />PG</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"PG_13\"/>PG_13</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"R\"/>R</label>\r\n                <label><Field name=\"compare\" component=\"input\" type=\"radio\" value=\"NC_17\"/>NC_17</label>\r\n                {props.errors && <span className=\"error\">{props.errors}</span>}\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'rating-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n    validateRadioGroupIsNotEmpty\r\n})(RatingFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport NameFilterForm from \"../filterForms/NameFilterForm\";\r\nimport {RATING} from \"../../constants/filterConstants\";\r\nimport RatingFilterForm from \"../filterForms/RatingFilterForm\";\r\n\r\n\r\nfunction RatingFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-rating\");\r\n        let filter = {};\r\n        filter.name = RATING;\r\n        filter.like = formData.compare;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <RatingFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RatingFilterPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/filter.css';\r\n\r\nconst textField = ({input, type, meta: {touched, error, warning}}) => (\r\n    <div className=\"text-box\">\r\n        <input {...input} type={type}\r\n               className={touched && error ? \"input-error\" : \"\"}/>\r\n    </div>\r\n)\r\n\r\nconst required = value => value ? undefined : 'Required'\r\n\r\nconst afterSubmit = (result, dispatch) =>\r\n    dispatch(reset('screenWriter-filter-form'));\r\n\r\n\r\nconst ScreenWriterFilterForm = (props) => {\r\n    const {handleSubmit, submitting} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Select movies with screenwriter name like</h3>\r\n            <div className=\"text-box-container\">\r\n                <Field name=\"like\" type=\"text\"\r\n                       component={textField} label=\"from\"\r\n                       validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button id=\"ok-but\" disabled={submitting}>OK</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'screenWriter-filter-form',\r\n    onSubmitSuccess: afterSubmit,\r\n})(ScreenWriterFilterForm)","import '../../css/table-layout.css';\r\nimport {useDispatch} from \"react-redux\";\r\nimport ScreenWriterFilterForm from \"../filterForms/ScreenWriterFilterForm\";\r\nimport {WRITER} from \"../../constants/filterConstants\";\r\n\r\n\r\nfunction ScreenWriterFilterPage() {\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData) => {\r\n        let element = document.getElementById(\"filter-screenWriter\");\r\n        let filter = {};\r\n        filter.name = WRITER;\r\n        filter.like = formData.like;\r\n        dispatch({\r\n            type: 'SET_FILTER',\r\n            payload: filter\r\n        });\r\n        element.style.color = \"rgb(255,255,255)\";\r\n        dispatch({\r\n            type: 'SHOW_MODAL',\r\n            payload: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <ScreenWriterFilterForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScreenWriterFilterPage;\r\n","import React from \"react\";\r\nimport \"../../css/modal.css\";\r\n\r\nconst Modal = ({active, setActive, children}) =>{\r\n    return(\r\n        <div className={active ? \"modal active\" : \"modal\"}\r\n             onClick={() => setActive(false)}>\r\n            <div className={active ? \"modal-content active\" : \"modal-content\"}\r\n                 onClick={e => e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Modal;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {required} from \"../../validators/required\";\r\nimport {getSingleCoordinates} from \"../../actions/coordinatesActions\";\r\n\r\nconst EditCoordinatesForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const coordinates = useSelector(state => state.coordinates.editedCoordinates);\r\n\r\n    useEffect(() => {\r\n        //dispatch(getSingleMovie(id));\r\n        dispatch(getSingleCoordinates(id));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            id: coordinates.id,\r\n            x: coordinates.x,\r\n            y: coordinates.y\r\n        });\r\n    }, [coordinates])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Coordinates</h3>\r\n\r\n                <Field name=\"x\" type=\"number\"\r\n                       component={renderedInputField} label=\"X\"\r\n                      /* validate={[required]}*/\r\n                />\r\n                <Field name=\"y\" type=\"number\"\r\n                       component={renderedInputField} label=\"Y\"\r\n                       /*validate={[required]}*/\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'edit-coordinates-form',\r\n    keepDirtyOnReinitialize: true\r\n})(EditCoordinatesForm)","import '../../css/table-layout.css';\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateCoordinates} from \"../../actions/coordinatesActions\";\r\nimport EditCoordinatesForm from \"../editForms/EditCoordinatesForm\";\r\n\r\n\r\nfunction EditCoordinatesPage() {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const movieId = useSelector(state => state.movies.editedMovie.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(updateCoordinates(formData, movieId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Edit Coordinates (ID: {id})</h2>\r\n            <hr/>\r\n            <EditCoordinatesForm id={id} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditCoordinatesPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\n\r\nconst CreateCoordinatesForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Coordinates</h3>\r\n                <Field name=\"x\" type=\"number\"\r\n                       component={renderedInputField} label=\"X\"\r\n                    /*validate={[required]}*/\r\n                />\r\n                <Field name=\"y\" type=\"number\"\r\n                       component={renderedInputField} label=\"Y\"\r\n                    /*  validate={[required]}*/\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'create-coordinates-form',\r\n    keepDirtyOnReinitialize: true\r\n})(CreateCoordinatesForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createCoordinates, updateCoordinates} from \"../../actions/coordinatesActions\";\r\nimport EditCoordinatesForm from \"../editForms/EditCoordinatesForm\";\r\nimport CreateCoordinatesForm from \"../createForms/CreateCoordinatesForm\";\r\n\r\n\r\nfunction CreateCoordinatesPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const movieId = useSelector(state => state.movies.editedMovie.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(createCoordinates(formData, movieId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Create Coordinates</h2>\r\n            <hr/>\r\n            <CreateCoordinatesForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateCoordinatesPage;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {required} from \"../../validators/required\";\r\nimport {getSingleLocation} from \"../../actions/locationsActions\";\r\n\r\nconst LocationEditForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const location = useSelector(state => state.location.editedLocation);\r\n\r\n    useEffect(() => {\r\n        dispatch(getSingleLocation(id));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            id: location.id,\r\n            x: location.x,\r\n            y: location.y,\r\n            name: location.name\r\n        });\r\n    }, [location])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Location</h3>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name of location\"\r\n                />\r\n                <Field name=\"x\" type=\"number\"\r\n                       component={renderedInputField} label=\"X\"\r\n                />\r\n                <Field name=\"y\" type=\"number\"\r\n                       component={renderedInputField} label=\"Y\"\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'edit-location-form',\r\n    keepDirtyOnReinitialize: true\r\n})(LocationEditForm)","import '../../css/table-layout.css';\r\nimport MovieEditForm from \"../editForms/MovieEditForm\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateCoordinates} from \"../../actions/coordinatesActions\";\r\nimport EditCoordinatesForm from \"../editForms/EditCoordinatesForm\";\r\nimport {updateLocation} from \"../../actions/locationsActions\";\r\nimport LocationEditForm from \"../editForms/LocationEditForm\";\r\n\r\n\r\nfunction EditCoordinatesPage() {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const movieId = useSelector(state => state.movies.editedMovie.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(updateLocation(formData, movieId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Edit Location (ID: {id})</h2>\r\n            <hr/>\r\n            <LocationEditForm id={id} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditCoordinatesPage;\r\n","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {required} from \"../../validators/required\";\r\n\r\nconst LocationCreateForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Location</h3>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name of location\"\r\n                />\r\n                <Field name=\"x\" type=\"number\"\r\n                       component={renderedInputField} label=\"X\"\r\n                />\r\n                <Field name=\"y\" type=\"number\"\r\n                       component={renderedInputField} label=\"Y\"\r\n                />\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'create-location-form',\r\n})(LocationCreateForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createLocation} from \"../../actions/locationsActions\";\r\nimport LocationCreateForm from \"../createForms/CreateLocationForm\";\r\n\r\n\r\nfunction CreateLocationPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const movieId = useSelector(state => state.movies.editedMovie.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(createLocation(formData, movieId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Create Location</h2>\r\n            <hr/>\r\n            <LocationCreateForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateLocationPage;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {required} from \"../../validators/required\";\r\nimport {getSingleCoordinates} from \"../../actions/coordinatesActions\";\r\nimport {colors} from \"../../constants/enumConstants\";\r\nimport {getSinglePerson} from \"../../actions/personsActions\";\r\nimport {getLocations} from \"../../actions/locationsActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst EditPersonForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const person = useSelector(state => state.person.editedPerson);\r\n    const locationList = useSelector(state => state.location.locationsList)\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(getSinglePerson(id));\r\n        dispatch(getLocations());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            id: person.id,\r\n            name: person.name,\r\n            weight: person.weight,\r\n            eyeColor: person.eyeColor,\r\n            locations: person.location.id\r\n        });\r\n    }, [person, locationList])\r\n\r\n    function handleEditLocationSubmit(evt) {\r\n        evt.preventDefault();\r\n        let element = document.getElementById(\"locations\");\r\n        history.push(\"/soa-lab1/location/edit/\" + element.value);\r\n    }\r\n\r\n    function handleCreateLocationSubmit(evt) {\r\n        evt.preventDefault();\r\n        history.push(\"/soa-lab1/location/new\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Screenwriter</h3>\r\n                <div className=\"label\">Location name</div>\r\n\r\n                <div className={\"buttons-div\"}>\r\n                    <Field name=\"locations\" id=\"locations\"\r\n                           component=\"select\" label=\"Coordinates\">\r\n                        {locationList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\r\n                    </Field>\r\n                        <button id={\"location-form-but\"} onClick={handleEditLocationSubmit}>Edit</button>\r\n                        <button id={\"location-form-but\"} onClick={handleCreateLocationSubmit}>Create</button>\r\n                </div>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name\"\r\n                      /* validate={[required]}*/\r\n                />\r\n                <Field name=\"weight\" type=\"number\"\r\n                       component={renderedInputField} label=\"Weight (kilo)\"\r\n                      /* validate={[required]}*/\r\n                />\r\n                <div className=\"label\">Eye color</div>\r\n                <Field name=\"eyeColor\"\r\n                       component=\"select\" label=\"Eye color\">\r\n                    {colors.map(o => <option key={o} value={o} >{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'edit-person-form',\r\n    keepDirtyOnReinitialize: true\r\n})(EditPersonForm)","import '../../css/table-layout.css';\r\nimport MovieEditForm from \"../editForms/MovieEditForm\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {updateCoordinates} from \"../../actions/coordinatesActions\";\r\nimport EditCoordinatesForm from \"../editForms/EditCoordinatesForm\";\r\nimport {updateLocation} from \"../../actions/locationsActions\";\r\nimport LocationEditForm from \"../editForms/LocationEditForm\";\r\nimport {updatePerson} from \"../../actions/personsActions\";\r\nimport EditPersonForm from \"../editForms/EditPersonForm\";\r\n\r\n\r\nfunction EditPersonPage() {\r\n    const {id} = useParams();\r\n    const dispatch = useDispatch();\r\n    const movieId = useSelector(state => state.movies.editedMovie.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(updatePerson(formData, movieId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Edit Person (ID: {id})</h2>\r\n            <hr/>\r\n            <EditPersonForm id={id} onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPersonPage;\r\n","import React, {useEffect} from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport '../../css/app.css';\r\nimport '../../css/edit-form.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {renderedInputField} from \"../customFormComponents/rendetedInputField\";\r\nimport {required} from \"../../validators/required\";\r\nimport {colors} from \"../../constants/enumConstants\";\r\nimport {getLocations} from \"../../actions/locationsActions\";\r\n\r\nconst CreatePersonForm = (props) => {\r\n    const {handleSubmit, pristine, reset, submitting, id} = props\r\n    const dispatch = useDispatch();\r\n    const locationList = useSelector(state => state.location.locationsList)\r\n\r\n    useEffect(() => {\r\n        dispatch(getLocations());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.reset();\r\n        props.initialize({\r\n            locations: locationList[0].id,\r\n            eyeColor: colors[0]\r\n        });\r\n    }, [locationList])\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} id={\"movie-form\"}>\r\n            <div className={\"movie-form\"}>\r\n                <h3>Screenwriter</h3>\r\n                <div className=\"label\">Location name</div>\r\n                <Field name=\"locations\" id=\"locations\"\r\n                       component=\"select\" label=\"Coordinates\">\r\n                    {locationList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\r\n                </Field>\r\n                <Field name=\"name\" type=\"text\"\r\n                       component={renderedInputField} label=\"Name\"\r\n                       /*validate={[required]}*/\r\n                />\r\n                <Field name=\"weight\" type=\"number\"\r\n                       component={renderedInputField} label=\"Weight (kilo)\"\r\n                       /*validate={[required]}*/\r\n                />\r\n                <div className=\"label\">Eye color</div>\r\n                <Field name=\"eyeColor\"\r\n                       component=\"select\" label=\"Eye color\">\r\n                    {colors.map(o => <option key={o} value={o}>{o} </option>)}\r\n                </Field>\r\n                <div>\r\n                    <button id=\"edit-form-but\" disabled={submitting}>Submit</button>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'create-person-form',\r\n})(CreatePersonForm)","import '../../css/table-layout.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createCoordinates, updateCoordinates} from \"../../actions/coordinatesActions\";\r\nimport EditCoordinatesForm from \"../editForms/EditCoordinatesForm\";\r\nimport CreateCoordinatesForm from \"../createForms/CreateCoordinatesForm\";\r\nimport CreatePersonForm from \"../createForms/CreatePersonForm\";\r\nimport {createPerson} from \"../../actions/personsActions\";\r\n\r\n\r\nfunction CreatePersonPage() {\r\n\r\n    const dispatch = useDispatch();\r\n    const movieId = useSelector(state => state.movies.editedMovie.id);\r\n\r\n    const onSubmit = (formData) => {\r\n        dispatch(createPerson(formData, movieId));\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-layout\">\r\n            <h2>Create Person</h2>\r\n            <hr/>\r\n            <CreatePersonForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreatePersonPage;\r\n","export const SET_GENRE_COUNT = \"SET_GENRE_COUNT\"\r\nexport const SET_GENRE = \"SET_GENRE\"\r\nexport const SET_LENGTH = \"SET_LENGTH\"\r\nexport const SET_LENGTH_COUNT = \"SET_LENGTH_COUNT\"\r\nexport const SET_SCREENWRITER = \"SET_SCREENWRITER\"\r\nexport const SET_SCREENWRITER_LIST = \"SET_SCREENWRITER_LIST\"","import '../../css/table-layout.css';\r\nimport {genres} from \"../../constants/enumConstants\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SET_GENRE_COUNT} from \"../../constants/additionalActionsConsts\";\r\nimport {getGenreCount} from \"../../actions/additionalTasksActions\";\r\n\r\nfunction GenreTaskPage() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const [localGenre, setLocalGenre] = useState(\"\");\r\n    const genreCount = useSelector(state => state.additional.genreCount);\r\n\r\n    useEffect(() => {\r\n        return history.listen(location => {\r\n            if (history.action === 'POP') {\r\n                dispatch({\r\n                    type: SET_GENRE_COUNT,\r\n                    payload: \"\"\r\n                });\r\n            } else {\r\n\r\n            }\r\n\r\n        })\r\n    }, [])\r\n\r\n    function redirectOnMain() {\r\n        history.push(\"/soa-lab1\");\r\n        dispatch({\r\n            type: SET_GENRE_COUNT,\r\n            payload: \"\"\r\n        });\r\n    }\r\n\r\n    function handleOnChangeGenre(event) {\r\n        let input = event.target.value;\r\n        setLocalGenre(input);\r\n        if (input !== \"\")\r\n            dispatch(getGenreCount(input));\r\n        else\r\n            dispatch({\r\n                type: SET_GENRE_COUNT,\r\n                payload: \"\"\r\n            });\r\n    }\r\n\r\n    function handleOnFocusGenre(event) {\r\n        setLocalGenre(\"\");\r\n        dispatch({\r\n            type: SET_GENRE_COUNT,\r\n            payload: \"\"\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"task-layout\">\r\n            <h1>Genre task</h1>\r\n            <div className={\"add-task-container\"}>\r\n                <div>How many movies exist with GENRE equals to</div>\r\n                <select className={\"add-select\"} value={localGenre}\r\n                        onChange={handleOnChangeGenre}\r\n                        onFocus={handleOnFocusGenre}>\r\n                    {genres.map(o => <option key={o} value={o}>{o}</option>)}\r\n                </select>\r\n            </div>\r\n            {genreCount !== \"\" &&\r\n            <div className={\"answer\"}> Answer: {genreCount}</div>\r\n            }\r\n            <button className={\"back-movie-but\"} onClick={redirectOnMain}>BACK TO MOVIES</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GenreTaskPage;\r\n","import {ADDITIONAL_SERVLET, BASE} from \"../constants/backendConstants\";\r\nimport {convert, options} from \"../utils/xmlUtils\";\r\nimport {SET_GENRE_COUNT, SET_LENGTH_COUNT, SET_SCREENWRITER_LIST} from \"../constants/additionalActionsConsts\";\r\nimport Notifications from \"react-notification-system-redux\";\r\nimport {serverException} from \"../notifications/sendNotification\";\r\n\r\nexport function getGenreCount(genre) {\r\n    return (dispatch) => {\r\n        const url = BASE + ADDITIONAL_SERVLET + \"?genre=\" + genre;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                dispatch({\r\n                    type: SET_GENRE_COUNT,\r\n                    payload: result.countDTO.count\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getLengthCount(length) {\r\n    console.log(\"LENGTH = \" + length);\r\n    return (dispatch) => {\r\n        const url = BASE + ADDITIONAL_SERVLET + \"?length=\" + length;\r\n        console.log(url);\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                console.log(response);\r\n                const result = convert.xml2js(response, options);\r\n                dispatch({\r\n                    type: SET_LENGTH_COUNT,\r\n                    payload: result.countDTO.count\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}\r\n\r\nexport function getScreenWriterList(id) {\r\n    return (dispatch) => {\r\n        const url = BASE + ADDITIONAL_SERVLET + \"?screenwriter=\" + id;\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/xml; charset=utf-8'\r\n            },\r\n        })\r\n            .then(response => {\r\n                console.log(\"STATUS \" + response.status)\r\n                if (!response.ok)\r\n                    throw response;\r\n                return response.text();\r\n            })\r\n            .then(response => {\r\n                const result = convert.xml2js(response, options);\r\n                dispatch({\r\n                    type: SET_SCREENWRITER_LIST,\r\n                    payload:result.personDTOList.persons.person\r\n                });\r\n            })\r\n            .catch(error => {\r\n                error.text().then(errorMessage => {\r\n                    const convert = require('xml-js');\r\n                    const result = convert.xml2js(errorMessage, options);\r\n                    const msg = result.exceptionDTO.message;\r\n                    dispatch(Notifications.error(serverException(msg)));\r\n                })\r\n            });\r\n    }\r\n}","import '../../css/table-layout.css';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SET_LENGTH_COUNT} from \"../../constants/additionalActionsConsts\";\r\nimport {getLengthCount} from \"../../actions/additionalTasksActions\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nfunction DurationTaskPage() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const durationCount = useSelector(state => state.additional.lengthCount);\r\n    const [localDuration, setLocalDuration] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        return history.listen(location => {\r\n            if (history.action === 'POP') {\r\n                dispatch({\r\n                    type: SET_LENGTH_COUNT,\r\n                    payload: \"\"\r\n                });\r\n            } else {\r\n\r\n            }\r\n\r\n        })\r\n    }, [])\r\n\r\n    function handleOnChangeDuration(event) {\r\n        let input = event.target.value;\r\n        setLocalDuration(input);\r\n    }\r\n\r\n    function handleOnFocusDuration(event) {\r\n        setLocalDuration(\"\");\r\n        dispatch({\r\n            type: SET_LENGTH_COUNT,\r\n            payload: \"\"\r\n        });\r\n    }\r\n\r\n    function handleOnBlurDuration(event) {\r\n        let input = event.target.value;\r\n        if (input !== \"\" && Number.isInteger(Number(input)) && Number(input) > 0) {\r\n            dispatch(getLengthCount(input));\r\n        } else {\r\n            setLocalDuration(\"\")\r\n        }\r\n    }\r\n\r\n    function redirectOnMain() {\r\n        dispatch({\r\n            type: SET_LENGTH_COUNT,\r\n            payload: \"\"\r\n        });\r\n        history.push(\"/soa-lab1\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"task-layout\">\r\n            <h1>Duration task</h1>\r\n            <div className={\"add-task-container\"}>\r\n                <div>How many movies exist with DURATION greater than</div>\r\n                <input type={\"number\"} className={\"add-input\"} value={localDuration}\r\n                       onChange={handleOnChangeDuration}\r\n                       onFocus={handleOnFocusDuration}\r\n                       onBlur={handleOnBlurDuration}/>\r\n            </div>\r\n            {durationCount !== \"\" &&\r\n            <div className={\"answer\"}> Answer: {durationCount}</div>\r\n            }\r\n            <button className={\"back-movie-but\"} onClick={redirectOnMain}>BACK TO MOVIES</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DurationTaskPage;\r\n","import '../css/table-header.css';\r\nimport '../css/app.css';\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nfunction PersonTableHeader() {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className=\"table-header base\" id=\"table-header\">\r\n\r\n            <div className=\"id-div\">\r\n                <span>Id</span>\r\n            </div>\r\n            <div>\r\n                <span>Name</span>\r\n            </div>\r\n            <div>\r\n                <span>Weight</span>\r\n            </div>\r\n            <div>\r\n                <span>Eye Color</span>\r\n            </div>\r\n            <div>\r\n                <span>Location</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonTableHeader;\r\n","import \"../css/table-row.css\"\r\nimport '../css/app.css';\r\n\r\nfunction PersonTableRow(props) {\r\n    const person = props.person;\r\n    const personId = person.id;\r\n\r\n    return (\r\n        <div className=\"table-row base\">\r\n            <div className=\"id-div\">{personId}</div>\r\n            <div>{person.name}</div>\r\n            <div>{person.weight}</div>\r\n            <div>{person.eyeColor}</div>\r\n            <div>{person.location.name}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonTableRow;\r\n","import PersonTableRow from \"./PersonTableRow\";\r\n\r\nfunction PersonList(props) {\r\n    const screenwriterList = props.screenwriterList;\r\n   // console.log(\"SCREENWRITER LIST = \" + screenwriterList)\r\n    let listItems;\r\n    if (screenwriterList === undefined) {\r\n        return (\r\n            <div className=\"table-row base id-div\">\r\n                <div className=\"id-div\">No data.</div>\r\n            </div>\r\n        );\r\n    }\r\n    if (!Array.isArray(screenwriterList)) {\r\n        console.log(\"NOT ARRAY\")\r\n        listItems = <PersonTableRow person={screenwriterList} key={screenwriterList.id}/>\r\n    } else {\r\n        listItems = screenwriterList.map((person) =>\r\n            <PersonTableRow person={person} key={person.id}/>\r\n        );\r\n    }\r\n    return (\r\n        <div>{listItems}</div>\r\n    );\r\n}\r\n\r\nexport default PersonList;","import '../css/movie-table.css';\r\nimport PersonTableHeader from \"./PersonTableHeader\";\r\nimport PersonList from \"./PersonList\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction PersonTable() {\r\n    const screenwriterList = useSelector(state => state.additional.screenwriterList);\r\n\r\n    return (\r\n        <div className=\"movie-table\">\r\n            <PersonTableHeader/>\r\n            <PersonList screenwriterList={screenwriterList}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PersonTable;","import '../../css/table-layout.css';\r\nimport React, {useEffect} from \"react\";\r\nimport {getPerson} from \"../../actions/personsActions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {SET_SCREENWRITER_LIST} from \"../../constants/additionalActionsConsts\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {getScreenWriterList} from \"../../actions/additionalTasksActions\";\r\nimport PersonTable from \"../../personTableComponents/PersonTable\";\r\n\r\nfunction ScreenwriterTaskPage() {\r\n    const dispatch = useDispatch();\r\n    const personList = useSelector(state => state.person.personsList);\r\n    const screenwriterList = useSelector(state => state.additional.screenwriterList);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPerson());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return history.listen(location => {\r\n            if (history.action === 'POP') {\r\n                dispatch({\r\n                    type: SET_SCREENWRITER_LIST,\r\n                    payload: []\r\n                });\r\n            } else {\r\n\r\n            }\r\n\r\n        })\r\n    }, [])\r\n\r\n    function redirectOnMain() {\r\n        history.push(\"/soa-lab1\");\r\n        dispatch({\r\n            type: SET_SCREENWRITER_LIST,\r\n            payload: []\r\n        });\r\n    }\r\n\r\n    function handleOnChangeScreenwriter(event) {\r\n        let input = event.target.value;\r\n        if (input !== \"\")\r\n            dispatch(getScreenWriterList(input));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"task-layout\">\r\n            <h1>Screenwriter task</h1>\r\n            <div className={\"add-task-container\"}>\r\n                <div>List all movies with SCREENWRITER less than</div>\r\n                <select className={\"add-select\"}\r\n                        onChange={handleOnChangeScreenwriter}>\r\n                    {personList.map(o => <option key={o.id} value={o.id}>{o.name}</option>)}\r\n                </select>\r\n            </div>\r\n            {(!Array.isArray(screenwriterList) || screenwriterList.length > 0) &&\r\n            < PersonTable/>\r\n            }\r\n\r\n            <button className={\"back-movie-but\"} onClick={redirectOnMain}>BACK TO MOVIES</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScreenwriterTaskPage;\r\n","import '../css/app.css';\nimport TablePage from \"./movieTableComponents/TablePage\";\nimport Notifications from 'react-notification-system-redux';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport MovieEditPage from \"./editPages/MovieEditPage\";\nimport CreateMoviePage from \"./createPages/CreateMoviePage\";\nimport createBrowserHistory from 'history/createBrowserHistory'\nimport {COORDINATE, DATE, DURATION, GENRE, ID, NAME, OSCAR, RATING, WRITER} from \"../constants/filterConstants\";\nimport IdFilterPage from \"./filterPages/IdFilterPage\";\nimport NameFilterPage from \"./filterPages/NameFilterPage\";\nimport CoordinateFilterPage from \"./filterPages/CoordinateFilterPage\";\nimport DateFilterPage from \"./filterPages/DateFilterPage\";\nimport OscarFilterPage from \"./filterPages/OscarFilterPage\";\nimport DurationFilterPage from \"./filterPages/DurationFilterPage\";\nimport GenreFilterPage from \"./filterPages/GenreFilterPage\";\nimport RatingFilterPage from \"./filterPages/RatingFilterPage\";\nimport ScreenWriterFilterPage from \"./filterPages/ScreenWriterFilterPage\";\nimport Modal from \"./modal/Modal\";\nimport EditCoordinatesPage from \"./editPages/EditCoordinatesPage\";\nimport CreateCoordinatesPage from \"./createPages/CreateCoordinatesPage\";\nimport LocationEditPage from \"./editPages/LocationEditPage\";\nimport CreateLocationPage from \"./createPages/CreateLocationPage\";\nimport EditPersonPage from \"./editPages/EditPersonPage\";\nimport CreatePersonPage from \"./createPages/CreatePersonPage\";\nimport GenreTaskPage from \"./additionalTasks/GenreTaskPage\";\nimport DurationTaskPage from \"./additionalTasks/DurationTaskPage\";\nimport ScreenwriterTaskPage from \"./additionalTasks/ScreenwriterTaskPage\";\n\nexport const history = createBrowserHistory()\n\n/*class DebugRouter extends Router {\n    constructor(props){\n        super(props);\n        console.log('initial history is: ', JSON.stringify(this.history, null,2))\n        this.history.listen((location, action)=>{\n            console.log(\n                `The current URL is ${location.pathname}${location.search}${location.hash}`\n            )\n            console.log(`The last navigation action was ${action}`, JSON.stringify(this.history, null,2));\n        });\n    }\n}*/\n\nfunction App() {\n    const notifications = useSelector(state => state.notifications);\n    const modalActive = useSelector(state => state.page.modalActive);\n    const dispatch = useDispatch();\n    const currentCriterion = useSelector(state => state.page.curCriterion);\n\n    function setActive(value) {\n        dispatch({\n            type: 'SHOW_MODAL',\n            payload: value\n        });\n    }\n\n    return (\n        <div className=\"app\">\n            <Modal active={modalActive} setActive={setActive} id=\"modal\">\n                {currentCriterion === ID && <IdFilterPage/>}\n                {currentCriterion === NAME && <NameFilterPage/>}\n                {currentCriterion === COORDINATE && <CoordinateFilterPage/>}\n                {currentCriterion === DATE && <DateFilterPage/>}\n                {currentCriterion === OSCAR && <OscarFilterPage/>}\n                {currentCriterion === DURATION && <DurationFilterPage/>}\n                {currentCriterion === GENRE && <GenreFilterPage/>}\n                {currentCriterion === RATING && <RatingFilterPage/>}\n                {currentCriterion === WRITER && <ScreenWriterFilterPage/>}\n            </Modal>\n            <Router history={history} >\n                <Switch>\n                    <Route path=\"/soa-lab1/edit/:id\">\n                        <MovieEditPage/>\n                    </Route>\n                    <Route path=\"/soa-lab1/coordinates/edit/:id\">\n                        <EditCoordinatesPage/>\n                    </Route>\n                    <Route path=\"/soa-lab1/location/edit/:id\">\n                        <LocationEditPage/>\n                    </Route>\n                    <Route path=\"/soa-lab1/person/edit/:id\">\n                        <EditPersonPage/>\n                    </Route>\n                    <Route exact path=\"/soa-lab1/coordinates/new\">\n                        <CreateCoordinatesPage/>\n                    </Route>\n                    <Route exact path=\"/soa-lab1/location/new\">\n                        <CreateLocationPage/>\n                    </Route>\n                    <Route exact path=\"/soa-lab1/person/new\">\n                        <CreatePersonPage/>\n                    </Route>\n                    <Route exact path=\"/soa-lab1/additional/genre\">\n                        <GenreTaskPage/>\n                    </Route>\n                    <Route exact path=\"/soa-lab1/additional/duration\">\n                        <DurationTaskPage/>\n                    </Route>\n                    <Route exact path=\"/soa-lab1/additional/screenwriter\">\n                        <ScreenwriterTaskPage/>\n                    </Route>\n                    <Route path=\"/soa-lab1/new\">\n                        <CreateMoviePage/>\n                    </Route>\n                    <Route exact path=\"/soa-lab1\">\n                        <TablePage/>\n                    </Route>\n                </Switch>\n            </Router>\n            <Notifications notifications={notifications}/>\n        </div>\n    );\n}\n\nexport default App;\n","import {useHistory} from \"react-router-dom\";\r\nimport {SET_EDITED_MOVIE, SET_MOVIES, SET_SCREENWRITER_EDITED_MOVIE} from \"../constants/movieActionsConsts\";\r\n\r\nconst initialState = {\r\n    movieList: [],\r\n    editedMovie: {\r\n        coordinates: {id: \"\", x: \"\", y: \"\"},\r\n        screenWriter: {\r\n            id: \"\", eyeColor: \"\", name: \"\", weight: \"\",\r\n            location: {id: \"\", x: \"\", name: \"\", y: \"\"}\r\n        }\r\n    }\r\n};\r\n\r\nexport function movieReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_MOVIES:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                movieList: action.payload\r\n            };\r\n        case SET_EDITED_MOVIE:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                editedMovie: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {\r\n    DELETE_MOVIE,\r\n    REMOVE_FILTER,\r\n    REMOVE_SORT, SET_CUR_CRITERION, SET_CUR_PAGE,\r\n    SET_FILTER, SET_ITEM_COUNT,\r\n    SET_PER_PAGE,\r\n    SET_SORT,\r\n    SHOW_MODAL\r\n} from \"../constants/pageActionsConsts\";\r\n\r\nconst initialState = {\r\n    perPage: 10,\r\n    currentPage: 1,\r\n    itemCount: \"\",\r\n    deleteItem: 0,\r\n    sortBy: [],\r\n    modalActive: false,\r\n    filters: [],\r\n    curCriterion:\"\",\r\n};\r\n\r\n\r\nexport function pageReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_PER_PAGE:\r\n            return {\r\n                ...state,\r\n                perPage: action.payload\r\n            };\r\n        case SET_CUR_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.payload\r\n            };\r\n        case SET_CUR_CRITERION:\r\n            return {\r\n                ...state,\r\n                curCriterion: action.payload\r\n            };\r\n        case SET_ITEM_COUNT:\r\n            return {\r\n                ...state,\r\n                itemCount: action.payload\r\n            };\r\n        case DELETE_MOVIE:\r\n            return {\r\n                ...state,\r\n                deleteItem: state.deleteItem + 1\r\n            };\r\n        case SET_SORT:\r\n            return {\r\n                ...state,\r\n                sortBy: [...state.sortBy, action.payload]\r\n            };\r\n        case REMOVE_SORT:\r\n            return {\r\n                ...state,\r\n                sortBy: state.sortBy.filter(item => item !== action.payload)\r\n            };\r\n        case SHOW_MODAL:\r\n            return {\r\n                ...state,\r\n                modalActive: action.payload\r\n            };\r\n        case SET_FILTER:\r\n            return {\r\n                ...state,\r\n                filters: [...state.filters , action.payload]\r\n            };\r\n        case REMOVE_FILTER:\r\n            return {\r\n                ...state,\r\n                filters: state.filters.filter(item => item.name !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {SET_COORDINATES, SET_EDITED_COORDINATES} from \"../constants/coordinatesActionsConsts\";\r\n\r\nconst initialState = {\r\n    coordinatesList: [],\r\n    editedCoordinates: {id:\"\", x:\"\", y:\"\"}\r\n};\r\n\r\nexport function coordinatesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_COORDINATES:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                coordinatesList: action.payload\r\n            };\r\n        case SET_EDITED_COORDINATES:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                editedCoordinates: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {SET_EDITED_LOCATION, SET_LOCATIONS} from \"../constants/locationActionsConsts\";\r\n\r\nconst initialState = {\r\n    locationsList: [ {id: \"\", x: \"\", y: \"\", name: \"\"}],\r\n    editedLocation: {id: \"\", x: \"\", y: \"\", name: \"\"}\r\n};\r\n\r\nexport function locationReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_LOCATIONS:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                locationsList: action.payload\r\n            };\r\n        case SET_EDITED_LOCATION:\r\n            console.log(action.payload);\r\n            return {\r\n                ...state,\r\n                editedLocation: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {SET_EDITED_PERSON, SET_PERSONS} from \"../constants/personActionsConsts\";\r\n\r\nconst initialState = {\r\n    personsList: [{id:\"\", name:\"\", weight:\"\", eyeColor:\"\", location:{}}, {id:\"\", name:\"\", weight:\"\", eyeColor:\"\", location:{}}],\r\n    editedPerson: {id:\"\", name:\"\", weight:\"\", eyeColor:\"\", location:{}}\r\n};\r\n\r\nexport function personReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_PERSONS:\r\n            return {\r\n                ...state,\r\n                personsList: action.payload\r\n            };\r\n        case SET_EDITED_PERSON:\r\n            return {\r\n                ...state,\r\n                editedPerson: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import {\r\n    SET_GENRE,\r\n    SET_GENRE_COUNT,\r\n    SET_LENGTH,\r\n    SET_LENGTH_COUNT,\r\n    SET_SCREENWRITER,\r\n    SET_SCREENWRITER_LIST\r\n} from \"../constants/additionalActionsConsts\";\r\n\r\nconst initialState = {\r\n    genre: \"\",\r\n    genreCount: \"\",\r\n    length: \"\",\r\n    lengthCount: \"\",\r\n    screenwriter: {},\r\n    screenwriterList: []\r\n};\r\n\r\nexport function additionalTasksReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_GENRE_COUNT:\r\n            return {\r\n                ...state,\r\n                genreCount: action.payload\r\n            };\r\n        case SET_GENRE:\r\n            return {\r\n                ...state,\r\n                genre: action.payload\r\n            };\r\n        case SET_SCREENWRITER_LIST:\r\n            return {\r\n                ...state,\r\n                screenwriterList: action.payload\r\n            };\r\n        case SET_LENGTH:\r\n            return {\r\n                ...state,\r\n                length: action.payload\r\n            };\r\n        case SET_LENGTH_COUNT:\r\n            return {\r\n                ...state,\r\n                lengthCount: action.payload\r\n            };\r\n        case SET_SCREENWRITER:\r\n            return {\r\n                ...state,\r\n                screenwriter: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { combineReducers } from 'redux'\r\nimport { movieReducer } from './movieReducer.js'\r\nimport {reducer as notifications} from 'react-notification-system-redux';\r\nimport {pageReducer} from \"./pageReducer\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport {coordinatesReducer} from \"./coordinatesReducer\";\r\nimport {locationReducer} from \"./locationReducer\";\r\nimport {personReducer} from \"./personReducer\";\r\nimport {additionalTasksReducer} from \"./additionalTasksReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    movies: movieReducer,\r\n    notifications: notifications,\r\n    page: pageReducer,\r\n    coordinates: coordinatesReducer,\r\n    location: locationReducer,\r\n    person: personReducer,\r\n    additional: additionalTasksReducer,\r\n    form: formReducer,\r\n});","import App from './components/App'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {rootReducer} from './reducer/rootReducer.js'\nimport {Provider} from \"react-redux\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(thunk, logger)),\n);\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}